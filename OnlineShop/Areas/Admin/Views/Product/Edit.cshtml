@model Model.EF.Product

@{
    ViewBag.Title = "Cập nhật sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Cập nhật sản phẩm
}
    @section jsFooter{
        <script>
            $(function () {
                //đăng kí sự kiện click của btnUpload
                $('#btnUpload').click(function () {
                    $('#Upload').trigger('click');
                });
                //Bắt sự kiện change data của fileUpload
                $('#Upload').change(function () {
                    //kiểm tra trình duyệt có hỗ trợ formdata
                    if (window.FormData !== undefined) {
                        //Lấy dữ liệu trên fileUpload
                        var fileUpload = $('#Upload').get(0);
                        var files = fileUpload.files;
                        //tao doi tuong formdata
                        var formData = new FormData();
                        //dua du lieu vao form
                        formData.append('file', files[0]);
                        $.ajax({

                            type: 'POST',
                            url: '/Admin/Product/ProcessUpload',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (urlImage) {
                                $('#pictureUpload').attr('src', urlImage);
                                $('#Image').val(urlImage);
                            },
                            error: function (err) {
                                @* Alert('Có lỗi khi upload:' + err.statusText);*@
                        }
                        })
                    }
                });
            });
            $(function () {
                //đăng kí sự kiện click của btnUpload
                $('#btnUploadMore').click(function () {
                    $('#UploadMore').trigger('click');
                });
                //Bắt sự kiện change data của fileUpload
                $('#UploadMore').change(function () {
                    //kiểm tra trình duyệt có hỗ trợ formdata
                    if (window.FormData !== undefined) {
                        //Lấy dữ liệu trên fileUpload
                        var fileUpload = $('#UploadMore').get(0);
                        var files = fileUpload.files;
                        //tao doi tuong formdata
                        var formData = new FormData();
                        //dua du lieu vao form
                        formData.append('file', files[0]);
                        $.ajax({

                            type: 'POST',
                            url: '/Admin/Product/ProcessUploadMore',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (urlImage) {
                                $('#pictureUploadMore').attr('src', urlImage);
                                $('#MoreImages').val(urlImage);
                            },
                            error: function (err) {
                                @* Alert('Có lỗi khi upload:' + err.statusText);*@
                        }
                        })
                    }
                });
            });
        </script>

    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-inline">
                @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                <input type="file" id="Upload" hidden />
                <input type="button" id="btnUpload" value="..." class="btn-success" />
                <hr />
            </div>
            <img id="pictureUpload" width="250" />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MoreImages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-inline">
                @Html.TextBoxFor(model => model.MoreImages, new { htmlAttributes = new { @class = "form-control" } })
                <input type="file" id="UploadMore" hidden />
                <input type="button" id="btnUploadMore" value="..." class="btn-success" />
                <hr />
            </div>
            <img id="pictureUploadMore" width="250" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IncludedVAT)
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.IncludedVAT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncludedVAT, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoryID, null, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MetaDescriptions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status)
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button>Cập nhật</button>
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
